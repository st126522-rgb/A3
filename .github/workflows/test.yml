name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_USERNAME: ${{ secrets.MLFLOW_USERNAME }}
      MLFLOW_PASSWORD: ${{ secrets.MLFLOW_PASSWORD }}
      MODEL_NAME: ${{ secrets.MODEL_NAME }}
      RUN_ID: ${{ secrets.RUN_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run unit tests
        run: |
          export PYTHONPATH=$(pwd)/code
          python -m pytest tests/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_USERNAME: ${{ secrets.MLFLOW_USERNAME }}
      MLFLOW_PASSWORD: ${{ secrets.MLFLOW_PASSWORD }}
      MODEL_NAME: ${{ secrets.MODEL_NAME }}
      RUN_ID: ${{ secrets.RUN_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t nabin85/a3_car_price:latest .

      - name: Push Docker image
        run: |
          docker push nabin85/a3_car_price:latest

      - name: Deploy to AIT server via ProxyJump
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.HOST }} # final server
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ vars.PROXY_HOST }} # jump server
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}

          script: |
            cd st125985

            # 1️⃣ Create .env file dynamically with MLflow credentials
            echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" > .env
            echo "MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_USERNAME }}" >> .env
            echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_PASSWORD }}" >> .env
            echo "MODEL_NAME=${{ secrets.MODEL_NAME }}" >> .env
            echo "RUN_ID=${{ secrets.RUN_ID }}" >> .env

            # 2️⃣ Stop previous containers
            docker compose down

            # 3️⃣ Start new containers (they read .env automatically)
            docker compose up -d